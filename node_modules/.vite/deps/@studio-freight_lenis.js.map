{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/debounce.js", "../../@studio-freight/lenis/src/dimensions.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/lenis/src/nanoevents.js", "../../@studio-freight/lenis/src/index.js", "dep:@studio-freight_lenis"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor(wrapper, content) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (this.wrapper === window) {\r\n      window.addEventListener('resize', this.onWindowResize, false)\r\n      this.onWindowResize()\r\n    } else {\r\n      this.wrapperResizeObserver = new ResizeObserver(\r\n        debounce(this.onWrapperResize, 100)\r\n      )\r\n      this.wrapperResizeObserver.observe(this.wrapper)\r\n      this.onWrapperResize()\r\n    }\r\n\r\n    this.contentResizeObserver = new ResizeObserver(\r\n      debounce(this.onContentResize, 100)\r\n    )\r\n    this.contentResizeObserver.observe(this.content)\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.width = window.innerWidth\r\n    this.height = window.innerHeight\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    this.width = this.wrapper.clientWidth\r\n    this.height = this.wrapper.clientHeight\r\n  }\r\n\r\n  onContentResize = () => {\r\n    const element =\r\n      this.wrapper === window ? document.documentElement : this.wrapper\r\n    this.scrollHeight = element.scrollHeight\r\n    this.scrollWidth = element.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "import { clamp } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      inertia: true,\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n", "export let createNanoEvents = () => ({\r\n  events: {},\r\n\r\n  // Emit an event with the provided arguments\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  },\r\n\r\n  // Register a callback for the specified event\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  },\r\n})\r\n", "import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { clamp, modulo } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Orientation} [direction]\r\n   * @property {GestureOrientation} [gestureDirection]\r\n   * @property {number} [mouseMultiplier]\r\n   * @property {boolean} [smooth]\r\n   *\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    //--legacy options--//\r\n    direction,\r\n    gestureDirection,\r\n    mouseMultiplier,\r\n    smooth,\r\n    //--legacy options--//\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper,\r\n    smoothWheel = smooth ?? true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration ? null : 0.1,\r\n    infinite = false,\r\n    orientation = direction ?? 'vertical', // vertical, horizontal\r\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = mouseMultiplier ?? 1,\r\n    normalizeWheel = false,\r\n  } = {}) {\r\n    // warn about legacy options\r\n    if (direction) {\r\n      console.warn(\r\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\r\n      )\r\n    }\r\n    if (gestureDirection) {\r\n      console.warn(\r\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\r\n      )\r\n    }\r\n    if (mouseMultiplier) {\r\n      console.warn(\r\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\r\n      )\r\n    }\r\n    if (smooth) {\r\n      console.warn(\r\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\r\n      )\r\n    }\r\n\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    }\r\n\r\n    this.dimensions = new Dimensions(wrapper, content)\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n\r\n    this.rootElement.classList.remove('lenis')\r\n    this.rootElement.classList.remove('lenis-smooth')\r\n    this.rootElement.classList.remove('lenis-scrolling')\r\n    this.rootElement.classList.remove('lenis-stopped')\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = type === 'touch'\r\n    const isWheel = type === 'wheel'\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\r\n      }),\r\n    })\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? this.options.content\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n", "import d from \"./node_modules/@studio-freight/lenis/dist/lenis.mjs\";export default d;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACgB,SAAAA,EAAMC,IAAKC,IAAOC,IAAAA;AAChC,SAAOC,KAAKD,IAAIF,IAAKG,KAAKH,IAAIC,IAAOC,EAAAA,CAAAA;AACvC;ACAa,IAAAE,IAAO,WAAA;AAAA,WAAAA,KAAAA;EAAAC;AAAAA,MAAAA,KAAAD,GAAAE;AAAAA,SAAAD,GAElBE,UAAA,SAAQC,IAAAA;AAAAA,QAAWC,IDMAC,IAAGC,IAAGC;ACLvB,QAAKC,KAAKC,WAAV;AAEA,UAAIC,KAAAA;AAEJ,UAAIF,KAAKG;AACPH,aAAKI,SDAUP,KCAGG,KAAKI,ODALN,KCAYE,KAAKK,KDC/B,KADiBN,KAMP,IAAIT,KAAKgB,IAAAA,MCNgBN,KAAKG,OAAWR,EAAAA,MDC1CE,KAAIE,KAAID,KCAjBR,KAAKiB,MAAMP,KAAKI,KAAAA,MAAWJ,KAAKK,OAClCL,KAAKI,QAAQJ,KAAKK,IAClBH,KAAAA;WAEG;AACLF,aAAKQ,eAAeb;AACpB,YAAMc,KAAiBvB,EAAM,GAAGc,KAAKQ,cAAcR,KAAKU,UAAU,CAAA,GAG5DC,MADNT,KAAYO,MAAkB,KACI,IAAIT,KAAKY,OAAOH,EAAAA;AAClDT,aAAKI,QAAQJ,KAAKa,QAAQb,KAAKK,KAAKL,KAAKa,QAAQF;MACnD;AAGAf,eAAAA,KAAAA,KAAKkB,aAALlB,GAAAmB,KAAAf,MAAgBA,KAAKI,OAAO,EAAEF,WAAAA,GAAAA,CAAAA,GAE1BA,MACFF,KAAKgB,KAAAA;IArBP;EAuBF,GAACxB,GAGDwB,OAAA,WAAA;AACEhB,SAAKC,YAAAA;EACP,GAACT,GAIDyB,SAAA,SAAOJ,IAAMR,IAAEa,IAAAA;AAAAA,QAA6DC,KAAAD,GAAzDf,MAAAA,KAAAA,WAAIgB,KAAG,MAAGA,IAAAC,KAAAF,GAAER,UAAAA,KAAAA,WAAQU,KAAG,IAACA,IAAAC,KAAAH,GAAEN,QAAAA,KAAAA,WAAMS,KAAG,SAACtB,IAAAA;AAAC,aAAKA;IAAC,IAAAsB,IAAEP,IAAQI,GAARJ;AAC9Dd,SAAKa,OAAOb,KAAKI,QAAQS,IACzBb,KAAKK,KAAKA,IACVL,KAAKG,OAAOA,IACZH,KAAKU,WAAWA,IAChBV,KAAKY,SAASA,IACdZ,KAAKQ,cAAc,GACnBR,KAAKC,YAAAA,MAELD,KAAKc,WAAWA;EAClB,GAACvB;AAAA,EA/CiB;ACHb,SAAS+B,EAASC,IAAUC,IAAAA;AACjC,MAAIC;AACJ,SAAmB,WAAA;AACjB,QAAIC,KAAOC,WACPC,KAAU5B;AACd6B,iBAAaJ,EAAAA,GACbA,KAAQK,WAAW,WAAA;AACjBP,MAAAA,GAASQ,MAAMH,IAASF,EAAAA;IAC1B,GAAGF,EAAAA;EACL;AACF;AAAA,ICRaQ,IACX,WAAA;AAAA,WAAAA,GAAYC,IAASC,IAAAA;AAAAA,QAASC,KAAAnC;AAAAA,SAsB9BoC,iBAAiB,WAAA;AACfD,MAAAA,GAAKE,QAAQC,OAAOC,YACpBJ,GAAKK,SAASF,OAAOG;IACvB,GAACzC,KASD0C,kBAAkB,WAAA;AAChBP,MAAAA,GAAKE,QAAQF,GAAKF,QAAQU,aAC1BR,GAAKK,SAASL,GAAKF,QAAQW;IAC7B,GAEAC,KAAAA,kBAAkB,WAAA;AAChB,UAAMC,KACJX,GAAKF,YAAYK,SAASS,SAASC,kBAAkBb,GAAKF;AAC5DE,MAAAA,GAAKc,eAAeH,GAAQG,cAC5Bd,GAAKe,cAAcJ,GAAQI;IAC7B,GA3CElD,KAAKiC,UAAUA,IACfjC,KAAKkC,UAAUA,IAEXlC,KAAKiC,YAAYK,UACnBA,OAAOa,iBAAiB,UAAUnD,KAAKoC,gBAAAA,KAAgB,GACvDpC,KAAKoC,eAAAA,MAELpC,KAAKoD,wBAAwB,IAAIC,eAC/B/B,EAAStB,KAAK0C,iBAAiB,GAAA,CAAA,GAEjC1C,KAAKoD,sBAAsBE,QAAQtD,KAAKiC,OAAAA,GACxCjC,KAAK0C,gBAAAA,IAGP1C,KAAKuD,wBAAwB,IAAIF,eAC/B/B,EAAStB,KAAK6C,iBAAiB,GAAA,CAAA,GAEjC7C,KAAKuD,sBAAsBD,QAAQtD,KAAKkC,OAAAA,GACxClC,KAAK6C,gBAAAA;EACP;AAAA,SAACb,GAAAvC,UAOD+D,UAAA,WAAA;AAAUC,QAAAA,IAAAC;AACRpB,WAAOqB,oBAAoB,UAAU3D,KAAKoC,gBAAAA,KAAgB,GAE1DqB,SAAAA,KAAAzD,KAAKoD,0BAALK,GAA4BG,WAAAA,GACF,SAA1BF,KAAA1D,KAAKuD,0BAALG,GAA4BE,WAAAA;EAC9B,GAACC,EAAA7B,IAAA8B,CAAAA,EAAAA,KAAAA,SAAAC,KAcD,WAAA;AACE,WAAO,EACLlE,GAAGG,KAAKkD,cAAclD,KAAKqC,OAC3BvC,GAAGE,KAAKiD,eAAejD,KAAKwC,OAAAA;EAEhC,EAAA,CAAA,CAAA,GAACR;AAAA,EAnDD;ADOF,IEPagC,IAAa,WAAA;AACxB,WAAAA,GACElB,IAAO5B,IAAAA;AAEP,QAAAiB,KAAA8B,MAAAA,KAAA/C,GADEgD,iBAAAA,KAAAA,WAAeD,KAAG,IAACA,IAAAE,KAAAjD,GAAEkD,iBAAAA,KAAAA,WAAeD,KAAG,IAACA,IAAAE,KAAAnD,GAAEoD,gBAAAA,IAAAA,WAAcD,MAAQA;AAkDpEE,SAAAA,eAAe,SAACC,IAAAA;AACd,UAAAC,KAA6BD,GAAME,gBAC/BF,GAAME,cAAc,KACpBF,IAFaG,KAAOF,GAAPE;AAIjBxC,MAAAA,GAAKyC,WAAW/E,IAJD4E,GAAPI,SAKR1C,GAAKyC,WAAW9E,IAAI6E,IAEpBxC,GAAK2C,YAAY,EACfjF,GAAG,GACHC,GAAG,EAAA;IAEP,GAGAiF,KAAAA,cAAc,SAACP,IAAAA;AACb,UAAAQ,KAA6BR,GAAME,gBAC/BF,GAAME,cAAc,KACpBF,IAFIK,KAAOG,GAAPH,SAASF,KAAOK,GAAPL,SAIXM,KAAAA,EAAWJ,KAAU1C,GAAKyC,WAAW/E,KAAKsC,GAAKiC,iBAC/Cc,KAAAA,EAAWP,KAAUxC,GAAKyC,WAAW9E,KAAKqC,GAAKiC;AAErDjC,MAAAA,GAAKyC,WAAW/E,IAAIgF,IACpB1C,GAAKyC,WAAW9E,IAAI6E,IAEpBxC,GAAK2C,YAAY,EACfjF,GAAGoF,IACHnF,GAAGoF,GAAAA,GAGL/C,GAAKgD,QAAQC,KAAK,UAAU,EAC1BC,MAAM,SACNJ,QAAAA,IACAC,QAAAA,IACAV,OAAAA,GAAAA,CAAAA;IAEJ,GAEAc,KAAAA,aAAa,SAACd,IAAAA;AACZrC,MAAAA,GAAKgD,QAAQC,KAAK,UAAU,EAC1BC,MAAM,SACNE,SAAAA,MACAN,QAAQ9C,GAAK2C,UAAUjF,GACvBqF,QAAQ/C,GAAK2C,UAAUhF,GACvB0E,OAAAA,GAAAA,CAAAA;IAEJ,GAACxE,KAGDwF,UAAU,SAAChB,IAAAA;AACT,UAAMS,KAAmBT,GAAnBS,QAAQC,KAAWV,GAAXU;AAEV/C,MAAAA,GAAKmC,mBACPW,KAAS/F,EAAAA,MAAY+F,IAAQ,GAAA,GAC7BC,KAAShG,EAAAA,MAAYgG,IAAQ,GAAA,IAM/B/C,GAAKgD,QAAQC,KAAK,UAAU,EAAEC,MAAM,SAASJ,QAH7CA,MAAU9C,GAAK+B,iBAGsCgB,QAFrDA,MAAU/C,GAAK+B,iBAE8CM,OAAAA,GAAAA,CAAAA;IAC/D,GA9GExE,KAAK8C,UAAUA,IACf9C,KAAKkE,kBAAkBA,IACvBlE,KAAKoE,kBAAkBA,IACvBpE,KAAKsE,iBAAiBA,GAEtBtE,KAAK4E,aAAa,EAChB/E,GAAG,MACHC,GAAG,KAAA,GAGLE,KAAKmF,UClB4B,EACnCM,QAAQ,CAAA,GAGRL,MAAI,SAACZ,IAAAA;AAEH,eADIkB,KAAY1F,KAAKyF,OAAOjB,OAAU,CAAA,GAC7BmB,KAAI,GAAGC,KAASF,GAAUE,QAAQD,KAAIC,IAAQD;AACrDD,QAAAA,GAAUC,IAAE5D,MAAZ2D,IAAS,CAAA,EAAAG,MAAA9E,KAAAY,WACX,CAAA,CAAA;IACF,GAGAmE,IAAEA,SAACtB,IAAOuB,IAAAA;AAAAA,UAAIC,IAAA7D,KAAAnC;AAKZ,cAHAgG,SAAAA,KAAAhG,KAAKyF,OAAOjB,OAAAA,SAAZwB,GAAoBC,KAAKF,EAAAA,OAAQ/F,KAAKyF,OAAOjB,MAAS,CAACuB,EAAAA,IAG1C,WAAA;AAAA,YAAAG;AACX/D,QAAAA,GAAKsD,OAAOjB,MAAAA,SAAM0B,KAAG/D,GAAKsD,OAAOjB,OAAAA,SAAZ0B,GAAoBC,OAAO,SAACR,IAAAA;AAAC,iBAAKI,OAAOJ;QAAC,CAAA;MACjE;IACF,EAAA,GDAE3F,KAAK8C,QAAQK,iBAAiB,SAASnD,KAAKwF,SAAS,EAAEY,SAAAA,MAAS,CAAA,GAChEpG,KAAK8C,QAAQK,iBAAiB,cAAcnD,KAAKuE,cAAc,EAC7D6B,SAAAA,MAAS,CAAA,GAEXpG,KAAK8C,QAAQK,iBAAiB,aAAanD,KAAK+E,aAAa,EAC3DqB,SAAAA,MAAS,CAAA,GAEXpG,KAAK8C,QAAQK,iBAAiB,YAAYnD,KAAKsF,YAAY,EACzDc,SAAAA,MAAS,CAAA;EAEb;AAAC,MAAA5G,KAAAwE,GAAAvE;AAAAA,SAAAD,GAGDsG,KAAA,SAAGtB,IAAOjD,IAAAA;AACR,WAAWvB,KAACmF,QAAQW,GAAGtB,IAAOjD,EAAAA;EAChC,GAAC/B,GAGDgE,UAAA,WAAA;AACExD,SAAKmF,QAAQM,SAAS,CAAE,GAExBzF,KAAK8C,QAAQa,oBAAoB,SAAS3D,KAAKwF,SAAS,EACtDY,SAAAA,MAAS,CAAA,GAEXpG,KAAK8C,QAAQa,oBAAoB,cAAc3D,KAAKuE,cAAc,EAChE6B,SAAAA,MAAS,CAAA,GAEXpG,KAAK8C,QAAQa,oBAAoB,aAAa3D,KAAK+E,aAAa,EAC9DqB,SAAAA,MAAS,CAAA,GAEXpG,KAAK8C,QAAQa,oBAAoB,YAAY3D,KAAKsF,YAAY,EAC5Dc,SAAAA,MAAS,CAAA;EAEb,GAACpC;AAAA,EAlDuB;AFO1B,IIKqBqC,IAqCnB,WAAA;AAAA,WAAAA,GAAAC,IAAAA;AAwBQ,QAAAnE,KAAAjB,MAAAA,KAAAA,WAAAoF,KAAJ,CAAE,IAAAA,IAtBJC,KAASrF,GAATqF,WACAC,KAAgBtF,GAAhBsF,kBACAC,IAAevF,GAAfuF,iBACAC,IAAMxF,GAANwF,QAAMC,IAAAzF,GAENe,SAAAA,IAAAA,WAAO0E,IAAGrE,SAAMqE,GAAAC,IAAA1F,GAChBgB,SAAAA,IAAAA,WAAO0E,IAAG7D,SAASC,kBAAe4D,GAAAC,IAAA3F,GAClC4F,mBAAAA,IAAAA,WAAiBD,IAAG5E,IAAO4E,GAAAE,IAAA7F,GAC3B8F,aAAAA,IAAAA,WAAWD,IAAGL,QAAAA,KAAAA,IAAcK,GAAAE,IAAA/F,GAC5BgG,aAAAA,IAAAA,WAAWD,KAAQA,GAAAE,IAAAjG,GACnBkG,WAAAA,IAAAA,WAASD,KAAQA,GAAAE,IAAAnG,GACjBoG,eAAAA,IAAAA,WAAaD,IAAG,MAAGA,GAAAE,IAAArG,GACnBsG,wBAAAA,IAAAA,WAAsBD,IAAG,KAAEA,GAC3B7G,IAAQQ,GAARR,UAAQW,IAAAH,GACRN,QAAAA,IAAAA,WAAMS,IAAG,SAACtB,IAAAA;AAAC,aAAKT,KAAKH,IAAI,GAAG,QAAQG,KAAKmI,IAAI,GAAA,MAAS1H,EAAAA,CAAAA;IAAG,IAAAsB,GAAAF,IAAAD,GACzDf,MAAAA,IAAAA,WAAIgB,IAAGT,IAAW,OAAO,MAAGS,GAAAuG,IAAAxG,GAC5ByG,UAAAA,IAAAA,WAAQD,KAAQA,GAAAE,IAAA1G,GAChB2G,aAAAA,IAAAA,WAAWD,IAAGrB,QAAAA,KAAAA,KAAa,aAAUqB,GAAAE,IAAA5G,GACrC6G,oBAAAA,IAAAA,WAAkBD,IAAmB,QAAhBtB,KAAAA,KAAoB,aAAUsB,GAAA3D,IAAAjD,GACnDkD,iBAAAA,IAAAA,WAAeD,IAAG,IAACA,GAAAF,IAAA/C,GACnBgD,iBAAAA,IAAAA,WAAeD,IAAkB,QAAfwC,IAAAA,IAAmB,IAACxC,GAAAI,IAAAnD,GACtCoD,gBAAAA,IAAAA,WAAcD,KAAQA;AAAArE,SA4GxBgI,kBAAkB,SAAAvD,IAAAA;AAAG,UAAAY,KAAIZ,GAAJY,MAAME,KAAOd,GAAPc,SAASN,KAAMR,GAANQ,QAAQC,KAAMT,GAANS,QAAQV,KAAKC,GAALD;AAElD,UAAA,CAAIA,GAAMyD,SAAV;AAEA,YAAMC,KAAmB,YAAT7C,IACV8C,KAAmB,YAAT9C;AAEhB,YAAA,EACuC,eAApClD,GAAKiG,QAAQL,sBAAgD,MAAX7C,MACd,iBAApC/C,GAAKiG,QAAQL,sBAAkD,MAAX9C,MACpDiD,MACqC,eAApC/F,GAAKiG,QAAQL,sBACG,MAAhB5F,GAAKkG,UAAAA,CACJlG,GAAKiG,QAAQT,YACdzC,MAAU,KAMVV,GACC8D,aAAAA,EACAC,KAAK,SAACC,IAAAA;AAAI,iBAAA,QAAKA,MAAkB,QAAlBA,GAAMC,eAAAA,SAAND,GAAMC,aAAe,oBAAA;QAAqB,CAAA;AAI9D,cAAItG,GAAKuG,aAAavG,GAAKwG;AACzBnE,YAAAA,GAAMoE,eAAAA;eADR;AASA,gBAJAzG,GAAK0G,YACD1G,GAAKiG,QAAQlB,eAAe/E,GAAKiG,QAAQhB,cAAcc,MACxD/F,GAAKiG,QAAQpB,eAAemB,IAAAA,CAE1BhG,GAAK0G;AAGR,qBAFA1G,GAAK2G,cAAAA,OAAc,KACnB3G,GAAK4G,QAAQ/H,KAAAA;AAIfwD,YAAAA,GAAMoE,eAAAA;AAEN,gBAAII,KAAQ9D;AAC4B,uBAApC/C,GAAKiG,QAAQL,qBACfiB,KAAQ1J,KAAK2J,IAAI/D,EAAAA,IAAU5F,KAAK2J,IAAIhE,EAAAA,IAAUC,KAASD,KACV,iBAApC9C,GAAKiG,QAAQL,uBACtBiB,KAAQ/D;AAGV,gBAAMmC,KAAYc,MAAW/F,GAAKiG,QAAQhB,WACpC8B,KAAkBhB,MAAW3C,MAAWjG,KAAK2J,IAAID,EAAAA,IAAS;AAC5DE,YAAAA,OACFF,KAAQ7G,GAAKgH,WAAWhH,GAAKiG,QAAQZ,yBAGvCrF,GAAKiH,SAASjH,GAAKkH,eAAeL,IAAKM,EACrCC,EAAAA,cAAAA,MAAc,GACVnC,MAAa,EACfjH,MAAM+I,KAAkB/G,GAAKmF,gBAAgB,IAAA,CAAA,CAAA;UA9BjD;MAzBA;IA0DF,GAMAkC,KAAAA,WAAW,WAAA;AACT,UAAA,CAAKrH,GAAK2G,aAAa;AACrB,YAAMW,KAAatH,GAAKuH;AACxBvH,QAAAA,GAAKuH,iBAAiBvH,GAAKkH,eAAelH,GAAKwH,cAC/CxH,GAAKgH,WAAW,GAChBhH,GAAKoE,YAAYjH,KAAKsK,KAAKzH,GAAKuH,iBAAiBD,EAAAA,GACjDtH,GAAKiD,KAAAA;MACP;IACF,GArLMmB,MACFsD,QAAQC,KACN,oEAAA,GAGAtD,MACFqD,QAAQC,KACN,kFAAA,GAGArD,KACFoD,QAAQC,KACN,8EAAA,GAGApD,KACFmD,QAAQC,KACN,iEAAA,GAIJxH,OAAOyH,eAAAA,UAGH9H,MAAYc,SAASC,mBAAmBf,MAAYc,SAASiH,SAC/D/H,IAAUK,SAGZtC,KAAKoI,UAAU,EACbnG,SAAAA,GACAC,SAAAA,GACA4E,mBAAAA,GACAE,aAAAA,GACAE,aAAAA,GACAE,WAAAA,GACAE,eAAAA,GACAE,wBAAAA,GACA9G,UAAAA,GACAE,QAAAA,GACAT,MAAAA,GACAwH,UAAAA,GACAI,oBAAAA,GACAF,aAAAA,GACAzD,iBAAAA,GACAF,iBAAAA,GACAI,gBAAAA,EAAAA,GAGFtE,KAAKiK,aAAa,IAAIjI,EAAWC,GAASC,CAAAA,GAC1ClC,KAAKkK,YAAYC,UAAUC,IAAI,OAAA,GAE/BpK,KAAKmJ,WAAW,GAChBnJ,KAAK0I,YAAAA,OACL1I,KAAK6I,WAAW7B,KAAeE,GAC/BlH,KAAK8I,cAAAA,OACL9I,KAAKqJ,eAAerJ,KAAK0J,iBAAiB1J,KAAK2J,cAC/C3J,KAAK+I,UAAU,IAAIxJ,KACnBS,KAAKmF,UDvI4B,EACnCM,QAAQ,CAAA,GAGRL,MAAI,SAACZ,IAAAA;AAEH,eADIkB,KAAY1F,KAAKyF,OAAOjB,OAAU,CAAA,GAC7BmB,KAAI,GAAGC,KAASF,GAAUE,QAAQD,KAAIC,IAAQD;AACrDD,QAAAA,GAAUC,IAAE5D,MAAZ2D,IAAS,CAAA,EAAAG,MAAA9E,KAAAY,WACX,CAAA,CAAA;IACF,GAGAmE,IAAEA,SAACtB,IAAOuB,IAAAA;AAAAA,UAAIC,IAAA7D,KAAAnC;AAKZ,cAHAgG,SAAAA,KAAAhG,KAAKyF,OAAOjB,OAAAA,SAAZwB,GAAoBC,KAAKF,EAAAA,OAAQ/F,KAAKyF,OAAOjB,MAAS,CAACuB,EAAAA,IAG1C,WAAA;AAAA,YAAAG;AACX/D,QAAAA,GAAKsD,OAAOjB,MAAAA,SAAM0B,KAAG/D,GAAKsD,OAAOjB,OAAAA,SAAZ0B,GAAoBC,OAAO,SAACR,IAAAA;AAAC,iBAAKI,OAAOJ;QAAC,CAAA;MACjE;IACF,EAAA,GCqHE3F,KAAKoI,QAAQnG,QAAQkB,iBAAiB,UAAUnD,KAAKwJ,UAAU,EAC7DpD,SAAAA,MAAS,CAAA,GAGXpG,KAAKqK,gBAAgB,IAAIrG,EAAc8C,GAAmB,EACxD1C,iBAAAA,GACAF,iBAAAA,GACAI,gBAAAA,EAAAA,CAAAA,GAEFtE,KAAKqK,cAAcvE,GAAG,UAAU9F,KAAKgI,eAAAA;EACvC;AAAC,MAAAxI,KAAA6G,GAAA5G;AA2TA4G,SA3TA7G,GAEDgE,UAAA,WAAA;AACExD,SAAKmF,QAAQM,SAAS,CAAA,GAEtBzF,KAAKoI,QAAQnG,QAAQ0B,oBAAoB,UAAU3D,KAAKwJ,UAAU,EAChEpD,SAAAA,MAAS,CAAA,GAGXpG,KAAKqK,cAAc7G,QAAAA,GAEnBxD,KAAKkK,YAAYC,UAAUG,OAAO,OAAA,GAClCtK,KAAKkK,YAAYC,UAAUG,OAAO,cAAA,GAClCtK,KAAKkK,YAAYC,UAAUG,OAAO,iBAAA,GAClCtK,KAAKkK,YAAYC,UAAUG,OAAO,eAAA;EACpC,GAAC9K,GAEDsG,KAAA,SAAGtB,IAAOjD,IAAAA;AACR,WAAWvB,KAACmF,QAAQW,GAAGtB,IAAOjD,EAAAA;EAChC,GAAC/B,GAED+K,MAAA,SAAI/F,IAAOjD,IAAAA;AAAUiJ,QAAAA;AACnBxK,SAAKmF,QAAQM,OAAOjB,MAASgG,SAAHA,KAAGxK,KAAKmF,QAAQM,OAAOjB,OAAAA,SAApBgG,GAA4BrE,OACvD,SAACR,IAAAA;AAAM,aAAApE,OAAaoE;IAAC,CAAA;EAEzB,GAACnG,GAEDiL,YAAA,SAAUpC,IAAAA;AAEJrI,SAAK0K,eACP1K,KAAKkK,YAAYS,aAAatC,KAE9BrI,KAAKkK,YAAYU,YAAYvC;EAEjC,GAAC7I,GAkED4F,OAAA,WAAA;AACEpF,SAAKmF,QAAQC,KAAK,UAAUpF,IAAAA;EAC9B,GAACR,GAYDqL,QAAA,WAAA;AACE7K,SAAK2I,WAAAA,OACL3I,KAAK8I,cAAAA,OACL9I,KAAKmJ,WAAW,GAChBnJ,KAAK+I,QAAQ/H,KAAAA;EACf,GAACxB,GAEDsL,QAAA,WAAA;AACE9K,SAAK0I,YAAAA,OAEL1I,KAAK6K,MAAAA;EACP,GAACrL,GAEDwB,OAAA,WAAA;AACEhB,SAAK0I,YAAAA,MACL1I,KAAK+I,QAAQ/H,KAAAA,GAEbhB,KAAK6K,MAAAA;EACP,GAACrL,GAEDuL,MAAA,SAAIC,IAAAA;AACF,QAAMrL,KAAYqL,MAAQhL,KAAKgL,QAAQA;AACvChL,SAAKgL,OAAOA,IAEZhL,KAAK+I,QAAQrJ,QAAoB,OAAZC,EAAAA;EACvB,GAACH,GAED4J,WAAA,SACE6B,IAAMC,IAAAA;AAYNC,QAAAA,KAAAnG,MAAAA,KAAAA,WAAAkG,KADI,CAAE,IAAAA,IAAAE,KAAApG,GATJqG,QAAAA,KAAAA,WAAMD,KAAG,IAACA,IAAAE,KAAAtG,GACVuG,WAAAA,KAAAA,WAASD,MAAQA,IAAAE,IAAAxG,GACjByG,MAAAA,IAAAA,WAAID,KAAQA,GAAAE,IAAA1G,GACZtE,UAAAA,IAAAA,WAAQgL,IAAG1L,KAAKoI,QAAQ1H,WAAQgL,GAAAC,IAAA3G,GAChCpE,QAAAA,IAAAA,WAAM+K,IAAG3L,KAAKoI,QAAQxH,SAAM+K,GAAAC,IAAA5G,GAC5B7E,MAAAA,IAAAA,WAAIyL,IAAAA,CAAIlL,KAAYV,KAAKoI,QAAQjI,OAAIyL,GAAAC,IAAA7G,GACrC8G,YAAAA,IAAAA,WAAUD,IAAG,OAAIA,GAAAE,IAAA/G,GACjBgH,OAAaC,IAAAjH,GACbuE,cAAAA,IAAAA,WAAY0C,KAAOA;AAGrB,QAAA,CAAIjM,KAAK0I,aAAAA,WAJFqD,KAAQA,GAIf;AAGA,UAAI,CAAC,OAAO,QAAQ,OAAA,EAASG,SAASjB,EAAAA;AACpCA,QAAAA,KAAS;eACA,CAAC,UAAU,SAAS,KAAA,EAAOiB,SAASjB,EAAAA;AAC7CA,QAAAA,KAASjL,KAAKmM;WACT;AAAA,YAAAC,GACD5D;AAUJ,YARsB,YAAA,OAAXyC,KAETzC,IAAOzF,SAASsJ,cAAcpB,EAAAA,IACf,SAAVmB,IAAInB,OAAAmB,EAAQE,aAEjB9D,IAAOyC,KAGLzC,GAAM;AACR,cAAIxI,KAAKoI,QAAQnG,YAAYK,QAAQ;AAEnC,gBAAMiK,IAAcvM,KAAKoI,QAAQnG,QAAQuK,sBAAAA;AACzCnB,YAAAA,MAAUrL,KAAK0K,eAAe6B,EAAYE,OAAOF,EAAYG;UAC/D;AAEA,cAAMC,IAAOnE,EAAKgE,sBAAAA;AAElBvB,UAAAA,MACGjL,KAAK0K,eAAeiC,EAAKF,OAAOE,EAAKD,OAAO1M,KAAK0J;QACtD;MACF;AAEA,UAAsB,YAAA,OAAXuB,IAAX;AAaA,YAXAA,MAAUI,IACVJ,KAAS3L,KAAKiB,MAAM0K,EAAAA,GAEhBjL,KAAKoI,QAAQT,WACX4B,MACFvJ,KAAKqJ,eAAerJ,KAAK0J,iBAAiB1J,KAAKqI,UAGjD4C,KAAS/L,EAAM,GAAG+L,IAAQjL,KAAKmM,KAAAA,GAG7BZ;AAMF,iBALAvL,KAAK0J,iBAAiB1J,KAAKqJ,eAAe4B,IAC1CjL,KAAKyK,UAAUzK,KAAKqI,MAAAA,GACpBrI,KAAK6K,MAAAA,GACL7K,KAAKoF,KAAAA,GAAAA,MAAAA,QACL0G,KAAAA,EAAAA;AAIF,YAAA,CAAKvC,GAAc;AACjB,cAAI0B,OAAWjL,KAAKqJ;AAAc;AAElCrJ,eAAKqJ,eAAe4B;QACtB;AAEAjL,aAAK+I,QAAQ9H,OAAOjB,KAAK0J,gBAAgBuB,IAAQ,EAC/CvK,UAAAA,GACAE,QAAAA,GACAT,MAAAA,GACAW,UAAU,SAACV,IAAKwM,IAAAA;AAAoB,cAAhB1M,KAAS0M,GAAT1M;AAEduL,gBAAMN,GAAKxC,WAAAA,OACfwC,GAAKrC,cAAAA,MAGLqC,GAAKhC,WAAW/I,KAAQ+K,GAAKzB,gBAC7ByB,GAAK5E,YAAYjH,KAAKsK,KAAKuB,GAAKhC,QAAAA,GAEhCgC,GAAKzB,iBAAiBtJ,IACtB+K,GAAKV,UAAUU,GAAK9C,MAAAA,GAEhBkB,MAEF4B,GAAK9B,eAAejJ,KAIlBF,OACEuL,MAAMN,GAAKxC,WAAAA,QACfkE,sBAAsB,WAAA;AAEpB1B,YAAAA,GAAKrC,cAAAA;UACP,CAAA,GACAqC,GAAKhC,WAAW,GAAA,QAChB2C,KAAAA,EAAAA,IAGFX,GAAK/F,KAAAA;QACP,EAAA,CAAA;MAAA;IA7F4B;EA+FhC,GAACvB,EAAAwC,IAAAvC,CAAAA,EAAAA,KAAAA,eAAAC,KAED,WAAA;AACE,WAAO/D,KAAKoI,QAAQnG,YAAYK,SAC5BtC,KAAKoI,QAAQlG,UACblC,KAAKoI,QAAQnG;EACnB,EAAA,GAAC6B,EAAAA,KAAAC,SAAAA,KAED,WAAA;AACE,WAAW/D,KAAC0K,eAAe1K,KAAKiK,WAAWkC,MAAMtM,IAAIG,KAAKiK,WAAWkC,MAAMrM;EAC7E,EAAA,GAACgE,EAAAA,KAAAC,gBAAAA,KAED,WAAA;AACE,WAAoC,iBAA7B/D,KAAKoI,QAAQP;EACtB,EAAA,GAAC/D,EAAAA,KAAAC,gBAAAA,KAED,WAAA;AAEE,WAAO/D,KAAK0K,eACR1K,KAAKkK,YAAYS,aACjB3K,KAAKkK,YAAYU;EACvB,EAAA,GAAC,EAAA9G,KAAA,UAAAC,KAED,WAAA;AACE,WAAW/D,KAACoI,QAAQT,YACT3H,KAAK0J,kBNhZMoD,KMgZU9M,KAAKmM,SN/YrBW,MAAKA,KMgZjB9M,KAAK0J;ANjZN,QAAmBoD;EMkZxB,EAAA,GAAC,EAAAhJ,KAAAC,YAAAA,KAED,WAAA;AAEE,WAAsB,MAAA,KAAVoI,QAAc,IAAInM,KAAKqI,SAASrI,KAAKmM;EACnD,EAAA,GAACrI,EAAAA,KAAAA,YAAAC,KAED,WAAA;AACE,WAAO/D,KAAK+M;EACd,GAACC,KAED,SAAa5M,IAAAA;AACPJ,SAAK+M,eAAe3M,OACtBJ,KAAKkK,YAAYC,UAAU8C,OAAO,gBAAgB7M,EAAAA,GAClDJ,KAAK+M,aAAa3M;EAEtB,EAAA,GAAC,EAAA0D,KAAA,eAAAC,KAED,WAAA;AACE,WAAW/D,KAACkN;EACd,GAACF,KAED,SAAgB5M,IAAAA;AACVJ,SAAKkN,kBAAkB9M,OACzBJ,KAAKkK,YAAYC,UAAU8C,OAAO,mBAAmB7M,EAAAA,GACrDJ,KAAKkN,gBAAgB9M;EAEzB,EAAA,GAAA,EAAC0D,KAAA,aAAAC,KAED,WAAA;AACE,WAAW/D,KAACmN;EACd,GAACH,KAED,SAAc5M,IAAAA;AACRJ,SAAKmN,gBAAgB/M,OACvBJ,KAAKkK,YAAYC,UAAU8C,OAAO,iBAAiB7M,EAAAA,GACnDJ,KAAKmN,cAAc/M;EAEvB,EAAA,CAAA,CAAA,GAACiG;AAAA,EA1ZD;;;ACpDkE,IAAO,+BAAQ;",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "_proto", "prototype", "advance", "deltaTime", "_this$onUpdate", "x", "y", "t", "this", "isRunning", "completed", "lerp", "value", "to", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "_ref", "_ref$lerp", "_ref$duration", "_ref$easing", "debounce", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "Dimensions", "wrapper", "content", "_this", "onWindowResize", "width", "window", "innerWidth", "height", "innerHeight", "onWrapperResize", "clientWidth", "clientHeight", "onContentResize", "element", "document", "documentElement", "scrollHeight", "scrollWidth", "addEventListener", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "removeEventListener", "disconnect", "_createClass", "key", "get", "VirtualScroll", "_ref$wheelMultiplier", "wheelMultiplier", "_ref$touchMultiplier", "touchMultiplier", "_ref$normalizeWheel", "normalizeWheel", "onTouchStart", "event", "_ref2", "targetTouches", "clientY", "touchStart", "clientX", "lastDelta", "onTouchMove", "_ref3", "deltaX", "deltaY", "emitter", "emit", "type", "onTouchEnd", "inertia", "onWheel", "events", "callbacks", "i", "length", "slice", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "passive", "Lenis", "_temp", "direction", "gestureDirection", "mouseMultiplier", "smooth", "_ref$wrapper", "_ref$content", "_ref$wheelEventsTarge", "wheelEventsTarget", "_ref$smoothWheel", "smoothWheel", "_ref$smoothTouch", "smoothTouch", "_ref$syncTouch", "syncTouch", "_ref$syncTouchLerp", "syncTouchLerp", "_ref$touchInertiaMult", "touchInertiaMultiplier", "pow", "_ref$infinite", "infinite", "_ref$orientation", "orientation", "_ref$gestureOrientati", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "isWheel", "options", "scroll", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "sign", "console", "warn", "lenisVersion", "body", "dimensions", "rootElement", "classList", "add", "virtualScroll", "remove", "off", "_this$emitter$events$", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "_temp2", "_this2", "_ref3$offset", "offset", "_ref3$immediate", "immediate", "_ref3$lock", "lock", "_ref3$duration", "_ref3$easing", "_ref3$lerp", "_ref3$onComplete", "onComplete", "_ref3$force", "force", "_ref3$programmatic", "includes", "limit", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "_ref4", "requestAnimationFrame", "d", "__isSmooth", "set", "toggle", "__isScrolling", "__isStopped"]
}
